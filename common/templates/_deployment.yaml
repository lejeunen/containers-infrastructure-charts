{{- define "common.deployment" -}}
{{- $common := dict "Values" .Values.common -}}
{{- $noCommon := omit .Values "common" -}}
{{- $overrides := dict "Values" $noCommon -}}
{{- $noValues := omit . "Values" -}}
{{- with merge $noValues $overrides $common -}}
apiVersion: apps/v1
kind: Deployment
{{ template "common.metadata" . }}
metadata:
  name: {{ include "common.fullname" . }}
  labels:
{{ include "common.labels" . | indent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "common.name" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ include "common.name" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
      annotations:
        prometheus.io/scrape: {{ required "A prometheus.scrape value is required!" .Values.prometheus.scrape }}
        prometheus.io/path: {{ required "A prometheus.path value is required!" .Values.prometheus.path }}
        prometheus.io/port: '{{ required "A prometheus.port value is required!" .Values.prometheus.port }}'
    spec:
    {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
    {{- end }}
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ required "A valid image.repository value is required!" .Values.image.repository }}:{{ required "A valid image.tag value is required!" .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: {{ required "A httpContainerPort value is required!" .Values.httpContainerPort }}
              protocol: TCP
          livenessProbe:
            initialDelaySeconds: {{ required "A liveness.initialDelaySeconds value is required!" .Values.liveness.initialDelaySeconds }}
            httpGet:
              path: {{ required "A liveness.path value is required!" .Values.liveness.path }}
              port: {{ required "A liveness.port value is required!" .Values.liveness.port }}
          readinessProbe:
            initialDelaySeconds: {{ required "A readiness.initialDelaySeconds value is required!" .Values.readiness.initialDelaySeconds }}
            httpGet:
              path: {{ required "A readiness.path value is required!" .Values.readiness.path }}
              port: {{ required "A readiness.port value is required!" .Values.readiness.port }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          env:
            {{- toYaml .Values.env | nindent 12 }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
    {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
{{- end -}}
{{- end -}}